kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/ludydoo/poc-cloud-service'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"cloud-service:latest","namespace":"cloud-service-ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"poc-cloud-service\")].image"}]'
  name: poc-cloud-service
  namespace: cloud-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-cloud-service
  template:
    metadata:
      labels:
        app: poc-cloud-service
        deployment: poc-cloud-service
    spec:
      serviceAccountName: cloud-service
      containers:
        - name: poc-cloud-service
          image: 'image-registry.openshift-image-registry.svc:5000/cloud-service-ci/cloud-service:latest'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: grpc
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: db-secret
          volumeMounts:
            - mountPath: /data
              name: data
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          configMap:
            name: data
  revisionHistoryLimit: 2